<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.UserDao">
    <!--根据用户名和密码查询用户信息，主要用于登录,结果类型为User类-->
    <select id="getUser"  parameterType="com.entity.User" resultType="com.entity.User">
        SELECT * FROM user where username=#{username} and password=#{password}
    </select>
    <!--根据用户名查找用户信息，主要用于判断用户的name是否唯一,登录是判断-->
    <select id="getUserByName" parameterType="String" resultType="com.entity.User">
        SELECT * FROM user where username=#{username}
    </select>

    <!--修改时排除掉自己，查询数据库中有没有相同的用户名-->
    <select id="getUsernameById" parameterType="com.entity.User" resultType="com.entity.User">
        SELECT * FROM user where username=#{username} and Id!=#{id}
    </select>

    <!--根据用户id查找用户信息，主要修改用户资料,查看个人资料-->
    <select id="getUserById" parameterType="int" resultType="com.entity.User">
        SELECT * FROM user where Id=#{id}
    </select>

    <!--根据用户ID来查询用户的姓名-->
    <select id="getNameById" parameterType="int" resultType="String">
        SELECT username FROM user where Id=#{id}
    </select>

    <!--注册一个用户 也就是添加用户但字段比较少-->
    <insert id="registerUser"  parameterType="com.entity.User" >
        insert into user(username,password,phone,email) values (#{username},#{password},#{phone},#{email})
    </insert>

    <!--管理员添加一个用户-->
    <insert id="addUser"  parameterType="com.entity.User" >
        insert into user(username,password,sex,phone,email,permissions) values (#{username},#{password},#{sex},#{phone},#{email},#{permissions})
    </insert>

    <!--查询用户列表 只能看普通用户-->
    <select id="getUserList" resultType="com.entity.User">
        select * from user where permissions>0
    </select>

    <!--修改、编辑用户信息-->
    <update id="updateUser" parameterType="com.entity.User">
        update user set username=#{username},password=#{password},age=#{age},sex=#{sex},phone=#{phone},
         email=#{email},address=#{address}
         where Id=#{id}

    </update>

    <!--根据id删除一个用户-->
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>

    <!--根据用户名查询用户的密码，用于密码的修改-->
    <select id="getPassword" parameterType="String" resultType="String">
        select password from user where username=#{username}
    </select>

    <!--修改用户的密码-->
    <update id="changePassword" >
        update user set password=#{password} where username=#{username}
    </update>

    <!--免费开店，成为卖家，修改权限-->
    <update id="openShop" parameterType="String">
        update user set permissions=2 where username=#{username}
    </update>
    
    <!--查看这个用户是否是卖家,查询权限是什么1，2-->
    <select id="sellerOrNot" parameterType="String" resultType="int">
       select permissions from user where username=#{username}
    </select>

</mapper>
